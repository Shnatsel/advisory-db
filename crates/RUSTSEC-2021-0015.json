{
  "id": "RUSTSEC-2021-0015",
  "modified": "2021-02-26T01:00:25+00:00",
  "published": "2021-01-06T12:00:00+00:00",
  "aliases": [
    "CVE-2021-26951"
  ],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "calamine",
    "purl": "pkg:cargo/calamine"
  },
  "summary": "`Sectors::get` accesses unclaimed/uninitialized memory",
  "details": "Affected versions of this crate arbitrarily calls `Vec::set_len` to increase length of a vector without claiming more memory for the vector. Affected versions of this crate\nalso calls user-provided `Read` on the uninitialized memory of the vector that was\nextended with `Vec::set_len`.\n\nThis can overwrite active entities in adjacent heap memory and seems to be a major security issue. Also, calling user-provided `Read` on uninitialized memory is defined as UB in Rust.",
  "affects": {
    "ranges": [
      {
        "type": "SEMVER",
        "fixed": "0.17.0"
      }
    ]
  },
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/calamine"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0015.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/tafia/calamine/issues/199"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": []
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption",
      "memory-exposure"
    ],
    "cvss": null,
    "informational": null
  }
}