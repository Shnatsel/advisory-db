{
  "id": "RUSTSEC-2020-0113",
  "modified": "2021-02-26T01:00:25+00:00",
  "published": "2020-10-31T12:00:00+00:00",
  "aliases": [
    "CVE-2020-36219"
  ],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "atomic-option",
    "purl": "pkg:cargo/atomic-option"
  },
  "summary": "AtomicOption should have Send + Sync bound on its type argument.",
  "details": "In the affected versions of this crate,\n`AtomicOption<T>` unconditionally implements `Sync`.\n\nThis allows programmers to move non-Sync types across thread boundaries (e.g. `Rc<T>`, `Arc<Cell<T>>`), which can lead to data races and undefined behavior. \nIt is also possible to send non-Send types like `std::sync::MutexGuard` to other threads, which can lead to undefined behavior.",
  "affects": {
    "ranges": [
      {
        "type": "SEMVER"
      }
    ]
  },
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/atomic-option"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0113.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/reem/rust-atomic-option/issues/4"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": []
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption",
      "thread-safety"
    ],
    "cvss": null,
    "informational": null
  }
}