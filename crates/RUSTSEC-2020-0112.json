{
  "id": "RUSTSEC-2020-0112",
  "modified": "2021-02-26T01:00:25+00:00",
  "published": "2020-12-18T12:00:00+00:00",
  "aliases": [
    "CVE-2020-36218"
  ],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "buttplug",
    "purl": "pkg:cargo/buttplug"
  },
  "summary": "ButtplugFutureStateShared allows data race to (!Send|!Sync) objects",
  "details": "`ButtplugFutureStateShared<T>` implements `Send` & `Sync` regardless of `T`.\n\nIf `T: !Send` for `ButtplugFutureStateShared<T>`, it is possible to move non-Send types across thread boundaries (e.g. `T`=`Rc<T>`) and lead to undefined behavior.\nIf `T: !Sync` for `ButtplugFutureStateShared<T>`, it is possible to cause data race to `T` (e.g. `T`=`Arc<Cell<_>>`) and lead to undefined behavior.\n\nThe flaw was corrected in version 1.0.4 by removing manual implementations of `Send`/`Sync` for `ButtplugFutureStateShared<T>` to let rustc generate auto trait implementations with correct trait bounds on `T`.",
  "affects": {
    "ranges": [
      {
        "type": "SEMVER",
        "fixed": "1.0.4"
      }
    ]
  },
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/buttplug"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0112.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/buttplugio/buttplug-rs/issues/225"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": []
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption",
      "thread-safety"
    ],
    "cvss": null,
    "informational": null
  }
}