{
  "id": "RUSTSEC-2020-0135",
  "modified": "2021-01-31T04:02:50+00:00",
  "published": "2020-11-17T12:00:00+00:00",
  "aliases": [],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "slock",
    "purl": "pkg:cargo/slock"
  },
  "summary": "Slock<T> allows sending non-Send types across thread boundaries",
  "details": "`Slock<T>` unconditionally implements `Send`/`Sync`.\n\nAffected versions of this crate allows sending non-Send types to other threads,\nwhich can lead to data races and memory corruption due to the data race.",
  "affects": {
    "ranges": [
      {
        "kind": "SEMVER"
      }
    ]
  },
  "references": [
    {
      "kind": "PACKAGE",
      "url": "https://crates.io/crates/slock"
    },
    {
      "kind": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0135.html"
    },
    {
      "kind": "REPORT",
      "url": "https://github.com/BrokenLamp/slock-rs/issues/2"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": []
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption",
      "thread-safety"
    ],
    "cvss": null,
    "informational": null
  }
}