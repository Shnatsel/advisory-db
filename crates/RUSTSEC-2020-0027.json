{
  "id": "RUSTSEC-2020-0027",
  "modified": "2021-05-22T15:06:48+00:00",
  "published": "2020-06-01T12:00:00+00:00",
  "aliases": [
    "CVE-2020-35881"
  ],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "traitobject",
    "purl": "pkg:cargo/traitobject"
  },
  "summary": "traitobject assumes the layout of fat pointers",
  "details": "This crate gets the data pointer from fat pointers assuming that the first\nelement in a fat pointer is the data pointer. This is currently true, but\nit may change in a future Rust version, leading to memory corruption.\n\nThis has been fixed in the master branch of the crate, but is has not\nbeen released into crates.io.",
  "affects": {
    "ranges": [
      {
        "type": "SEMVER"
      }
    ]
  },
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/traitobject"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0027.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/reem/rust-traitobject/issues/7"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": [
        "traitobject::data",
        "traitobject::data_mut"
      ]
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption"
    ],
    "cvss": null,
    "informational": "unsound"
  }
}