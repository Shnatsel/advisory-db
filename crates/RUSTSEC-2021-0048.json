{
  "id": "RUSTSEC-2021-0048",
  "modified": "2021-04-13T21:10:09+00:00",
  "published": "2021-02-19T12:00:00+00:00",
  "aliases": [
    "CVE-2021-29939"
  ],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "stackvector",
    "purl": "pkg:cargo/stackvector"
  },
  "summary": "StackVec::extend can write out of bounds when size_hint is incorrect",
  "details": "`StackVec::extend` used the lower and upper bounds from an Iterator's\n`size_hint` to determine how many items to push into the stack based vector.\n\nIf the `size_hint` implementation returned a lower bound that was larger than\nthe upper bound, `StackVec` would write out of bounds and overwrite memory\non the stack. As mentioned by the [size_hint](https://doc.rust-lang.org/std/iter/trait.Iterator.html#provided-methods)\ndocumentation, `size_hint` is mainly for optimization and incorrect\nimplementations should not lead to memory safety issues.",
  "affects": {
    "ranges": [
      {
        "type": "SEMVER",
        "fixed": "1.0.9"
      },
      {
        "type": "SEMVER",
        "introduced": "2.0.0-0"
      }
    ]
  },
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/stackvector"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0048.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/Alexhuszagh/rust-stackvector/issues/2"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": []
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption"
    ],
    "cvss": null,
    "informational": null
  }
}