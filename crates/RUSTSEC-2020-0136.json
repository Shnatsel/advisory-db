{
  "id": "RUSTSEC-2020-0136",
  "modified": "2021-01-31T04:02:50+00:00",
  "published": "2020-11-15T12:00:00+00:00",
  "aliases": [],
  "related": [],
  "package": {
    "ecosystem": "crates.io",
    "name": "toolshed",
    "purl": "pkg:cargo/toolshed"
  },
  "summary": "CopyCell lacks bounds on its Send trait allowing for data races",
  "details": "`CopyCell<T>` is a `Cell`-like type that is implemented for any type `T` that\nis `Copy`able. It's `Send` trait has no bounds on the contained type.\n\nAs not all `Copy`able types are thread safe, for example non-mutable references\nimplement the `Copy` trait, it is possible to send references to types with\ninterior mutability such as `Cell` across threads and cause data races.",
  "affects": {
    "ranges": [
      {
        "type": "SEMVER"
      }
    ]
  },
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/toolshed"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0136.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/ratel-rust/toolshed/issues/12"
    }
  ],
  "ecosystem_specific": {
    "affects": {
      "arch": [],
      "os": [],
      "functions": []
    }
  },
  "database_specific": {
    "categories": [
      "memory-corruption",
      "thread-safety"
    ],
    "cvss": null,
    "informational": null
  }
}